input {
    keyboard {
        xkb {
        	layout "fi"
        }

        
        repeat-delay 200
        repeat-rate 40
        numlock
    }

    mouse {
        // accel-speed 0.2
        accel-profile "flat"
    }
}

cursor {
    xcursor-theme "Nordzy-cursors"
    xcursor-size 24
    hide-when-typing
}

output "DP-2" {
    mode "2560x1440@119.998"
    scale 1.0
    position x=0 y=0
    variable-refresh-rate
}

output "HDMI-A-1" {
    mode "1920x1080@60.000"
    scale 1.0
    position x=2560 y=0
}

layout {
    // Set gaps around windows in logical pixels.
    gaps 8

    center-focused-column "never"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 1.0
    }

    default-column-width { proportion 0.5; }

    focus-ring {
        width 2


        active-color "#88C0D0"
        inactive-color "#4C566A"
        urgent-color "#EBCB8B"

    }

    border {
        off

        width 4
        active-color "#ffc87f"
        inactive-color "#505050"

        urgent-color "#9b0000"

    }

    shadow {
	on
        softness 15

        // Spread expands the shadow.
        spread 4

        // Offset moves the shadow relative to the window.
        offset x=0 y=0

        // You can also change the shadow color and opacity.
        color "#2E3440"
    }

    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

// Startup
spawn-at-startup "waybar"
spawn-at-startup "fnott"
spawn-sh-at-startup "easyeffects --gapplication-service &"
spawn-sh-at-startup "swaybg -i /home/turre/walls/1.png &"
spawn-sh-at-startup "foot --hold fastfetch"

hotkey-overlay {
    skip-at-startup
}

prefer-no-csd

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

animations {
}

// Open the Firefox picture-in-picture player as floating by default.
window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

// Draw real proper corners frfr
window-rule {
    geometry-corner-radius 4
    clip-to-geometry true
}

binds {
    // Binds/Programs
    Mod+Q { spawn "foot"; }
    Mod+D { spawn "librewolf"; }
    Mod+R { spawn "fuzzel"; }
    Mod+E { spawn-sh "foot yazi"; }
    
    XF86AudioRaiseVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }

    XF86AudioPlay        allow-when-locked=true { spawn-sh "playerctl play-pause"; }
    XF86AudioStop        allow-when-locked=true { spawn-sh "playerctl stop"; }
    XF86AudioPrev        allow-when-locked=true { spawn-sh "playerctl previous"; }
    XF86AudioNext        allow-when-locked=true { spawn-sh "playerctl next"; }

    XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "+10%"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "10%-"; }

    // Binds/Misc
    MouseForward { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }
    Mod+O repeat=false { toggle-overview; }
    Mod+C repeat=false { close-window; }
    Mod+Shift+S { screenshot; }
    Mod+Shift+P { power-off-monitors; }
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
    Mod+Shift+E { quit; }
    Ctrl+Alt+Delete { quit; }
    Mod+Shift+Ctrl+W { spawn-sh "pkill -USR2 waybar"; }
    

    // Binds/Focus
    Mod+J              { focus-column-left; }
    Mod+K              { focus-column-right; }
    Mod+H              { focus-monitor-left; }
    Mod+L              { focus-monitor-right; }
    Mod+N              { focus-workspace-down; }
    Mod+U              { focus-workspace-up; }
    Mod+Comma          { focus-window-down; }
    Mod+Period         { focus-window-up; }

    // Binds/Layout
    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }
    Mod+W { toggle-column-tabbed-display; }

    // Binds/Move
    Mod+Shift+J        { move-column-left; }
    Mod+Shift+K        { move-column-right; }
    Mod+Shift+H        { move-column-to-monitor-left; }
    Mod+Shift+L        { move-column-to-monitor-right; }
    Mod+Shift+N        { move-column-to-workspace-down; }
    Mod+Shift+U        { move-column-to-workspace-up; }
    Mod+Ctrl+C         { center-column; }
    Mod+Shift+Comma    { consume-or-expel-window-left; }
    Mod+Shift+Period   { consume-or-expel-window-right; }

    // Binds/Workspaces
    Mod+1              { focus-workspace 1; }
    Mod+2              { focus-workspace 2; }
    Mod+3              { focus-workspace 3; }
    Mod+4              { focus-workspace 4; }
    Mod+5              { focus-workspace 5; }
    Mod+6              { focus-workspace 6; }
    Mod+7              { focus-workspace 7; }
    Mod+8              { focus-workspace 8; }
    Mod+9              { focus-workspace 9; }
    Mod+Shift+1        { move-column-to-workspace 1; }
    Mod+Shift+2        { move-column-to-workspace 2; }
    Mod+Shift+3        { move-column-to-workspace 3; }
    Mod+Shift+4        { move-column-to-workspace 4; }
    Mod+Shift+5        { move-column-to-workspace 5; }
    Mod+Shift+6        { move-column-to-workspace 6; }
    Mod+Shift+7        { move-column-to-workspace 7; }
    Mod+Shift+8        { move-column-to-workspace 8; }
    Mod+Shift+9        { move-column-to-workspace 9; }

    // Binds/Sizing
    Mod+Shift+R        { switch-preset-column-width; }
    Mod+Ctrl+R         { reset-window-height; }
    
    Mod+F              { maximize-column; }
    Mod+Shift+F        { fullscreen-window; }
    Mod+Ctrl+F         { expand-column-to-available-width; }

    Mod+Ctrl+Comma     { set-column-width "-10%"; }
    Mod+Ctrl+Period    { set-column-width "+10%"; }
    Mod+Ctrl+Shift+Comma  { set-window-height "-10%"; }
    Mod+Ctrl+Shift+Period { set-window-height "+10%"; }
}
